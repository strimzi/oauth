version: '3'

services:

  hydra:
    image: oryd/hydra:v1.0.0
    container_name: hydra
    ports:
      - 4444:4444
      - 4445:4445
    volumes:
      - ${PWD}/../docker/target/hydra/certs:/tmp/certs
    command: serve all

    environment:
      - DSN=memory
      - URLS_SELF_ISSUER=https://hydra:4444/
      - URLS_CONSENT=http://hydra:9020/consent
      - URLS_LOGIN=http://hydra:9020/login
      - SERVE_TLS_KEY_PATH=/tmp/certs/hydra.key
      - SERVE_TLS_CERT_PATH=/tmp/certs/hydra.crt

  hydra-import:
    image: strimzi-oauth-testsuite/hydra-import:latest
    container_name: hydra-import
    volumes:
      - ${PWD}/../docker/hydra-import/scripts:/hydra
      - ${PWD}/../docker/target/hydra-import/certs:/hydra/certs
    entrypoint: ""
    command:
      - /bin/bash
      - -c
      - cd hydra && ./start.sh
    environment:
      - HYDRA_ADMIN_URL=https://hydra:4445
      - HYDRA_URI=https://hydra:4445/clients

  kafka:
    image: strimzi/kafka:latest-kafka-2.3.0
    container_name: kafka
    ports:
      - 9092:9092
    volumes:
      - ${PWD}/../docker/target/kafka/libs:/opt/kafka/libs/strimzi
      - ${PWD}/../docker/kafka/config:/opt/kafka/config/strimzi
      - ${PWD}/../docker/target/kafka/certs:/opt/kafka/config/strimzi/certs
      - ${PWD}/../docker/kafka/scripts:/opt/kafka/strimzi
    command:
      - /bin/bash
      - -c
      - cd /opt/kafka/strimzi && ./start_with_hydra.sh

    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=CLIENT://kafka:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:SASL_PLAINTEXT
      - KAFKA_SASL_ENABLED_MECHANISMS=OAUTHBEARER
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL=OAUTHBEARER
      - KAFKA_LISTENER_NAME_CLIENT_OAUTHBEARER_SASL_JAAS_CONFIG=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required;
      - KAFKA_LISTENER_NAME_CLIENT_OAUTHBEARER_SASL_LOGIN_CALLBACK_HANDLER_CLASS=io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler
      - KAFKA_LISTENER_NAME_CLIENT_OAUTHBEARER_SASL_SERVER_CALLBACK_HANDLER_CLASS=io.strimzi.kafka.oauth.server.JaasServerOauthValidatorCallbackHandler
      - KAFKA_SUPER_USERS=User:kafka-broker
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1

      # Authentication config
      - OAUTH_CLIENT_ID=kafka-broker
      - OAUTH_CLIENT_SECRET=kafka-broker-secret
      - OAUTH_TOKEN_ENDPOINT_URI=https://${HYDRA_HOST:-hydra}:4444/oauth2/token

      # Validation config
      - OAUTH_VALID_ISSUER_URI=https://${HYDRA_HOST:-hydra}:4444/
      - OAUTH_INTROSPECTION_ENDPOINT_URI=https://${HYDRA_HOST:-hydra}:4445/oauth2/introspect

      # Truststore config for connecting to secured authorization server
      - OAUTH_SSL_TRUSTSTORE_LOCATION=/opt/kafka/config/strimzi/certs/ca-truststore.p12
      - OAUTH_SSL_TRUSTSTORE_PASSWORD=changeit
      - OAUTH_SSL_TRUSTSTORE_TYPE=pkcs12

      # Skip attempts to parse tokens as JWT to locally introspect
      - OAUTH_TOKENS_NOT_JWT=true

      # For start_with_hydra.sh script to know where hydra is listening
      - HYDRA_HOST=${HYDRA_HOST:-hydra}

  zookeeper:
    image: strimzi/zookeeper:0.11.4-kafka-2.1.0
    container_name: zookeeper
    ports:
      - 2181:2181
    volumes:
      - ${PWD}/../docker/zookeeper/scripts:/opt/kafka/strimzi
    command:
      - /bin/bash
      - -c
      - cd /opt/kafka/strimzi && ./start.sh
    environment:
      - LOG_DIR=/tmp/logs
