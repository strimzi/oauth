version: '3.5'

services:

  #################################### KAFKA BROKER ####################################
  kafka:
    image: strimzi/example-kafka
    build: kafka-oauth-strimzi/kafka/target
    container_name: kafka
    command:
      - /bin/bash
      - /opt/kafka/start_without_wait.sh
    ports:
      - 9092:9092

      # javaagent debug port
      #- 5005:5005

    environment:

      # Java Debug
      #KAFKA_DEBUG: y
      #DEBUG_SUSPEND_FLAG: y
      #JAVA_DEBUG_PORT: 5005

      #
      # KAFKA Configuration
      #
      LOG_DIR: /home/kafka/logs
      #KAFKA_LOG_DIRS: /home/kafka/1

      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: CLIENT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CLIENT:SASL_PLAINTEXT
      KAFKA_SASL_ENABLED_MECHANISMS: OAUTHBEARER
      KAFKA_INTER_BROKER_LISTENER_NAME: CLIENT
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: OAUTHBEARER

      KAFKA_LISTENER_NAME_CLIENT_OAUTHBEARER_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required;"
      KAFKA_LISTENER_NAME_CLIENT_OAUTHBEARER_SASL_LOGIN_CALLBACK_HANDLER_CLASS: io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler
      KAFKA_LISTENER_NAME_CLIENT_OAUTHBEARER_SASL_SERVER_CALLBACK_HANDLER_CLASS: io.strimzi.kafka.oauth.server.JaasServerOauthValidatorCallbackHandler

      KAFKA_SUPER_USERS: User:service-account-kafka-broker

      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1



      #
      # Strimzi OAuth Configuration
      #

      # Authentication config
      OAUTH_CLIENT_ID: "kafka"
      OAUTH_CLIENT_SECRET: "kafkasecret"
      OAUTH_TOKEN_ENDPOINT_URI: "http://${SPRING_HOST:-spring}:8080/oauth/token"
      OAUTH_SCOPE: "any"

      # Validation config
      OAUTH_INTROSPECTION_ENDPOINT_URI: "http://${SPRING_HOST:-spring}:8080/oauth/check_token"
      OAUTH_CHECK_ISSUER: "false"
      OAUTH_ACCESS_TOKEN_IS_JWT: "false"
      OAUTH_CHECK_ACCESS_TOKEN_TYPE: "false"

      # username extraction from JWT token claim
      OAUTH_USERNAME_CLAIM: user_name
      OAUTH_FALLBACK_USERNAME_CLAIM: client_id
      OAUTH_FALLBACK_USERNAME_PREFIX: client-account-

      # For start.sh script to know where the keycloak is listening
      SPRING_HOST: ${SPRING_HOST:-spring}

  zookeeper:
    image: strimzi/example-zookeeper
    build: kafka-oauth-strimzi/zookeeper/target
    container_name: zookeeper
    ports:
      - 2181:2181
    environment:
      LOG_DIR: /home/kafka/logs